version: 2
jobs:
  build:
    docker:
      - image: golang:1.8
      - image: quay.io/coreos/etcd
    working_directory: /go/src/github.com/fragments/fragments
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dep-{{ checksum "Gopkg.lock" }}

      - run:
          name: install dependencies
          command: |
            go get github.com/golang/dep/cmd/dep
            dep ensure -v

      - save_cache:
          key: v1-dep-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor

      - run:
          name: vet
          command: |
            go list ./... | grep -v vendor | xargs go vet -v

      - run:
          name: check
          command: |
            go get honnef.co/go/tools/cmd/megacheck
            go list ./... | grep -v vendor | xargs megacheck

      - run:
          name: lint
          command: |
            go get -u github.com/golang/lint/golint
            go list ./... | grep -v vendor | xargs golint

      - run:
          name: Install netcat
          command: |
            apt-get update && apt-get -y install netcat && apt-get clean

      - run:
          name: Wait for services
          command: |
            for i in `seq 1 10`;
            do
              echo "Checking ETCD"
              nc -z localhost 2379 && echo Ok && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - run:
          name: test
          environment:
            ETCD_TEST_LISTEN_PORT: 2379
            ETCD_TEST_PEER_PORT: 2380
          command: |
            bash scripts/test.sh
            bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

      - run:
          name: configure build
          command: |
            export CGO_ENABLED=0
            mkdir -p /out

      - run:
          name: build
          command: |
            go build -ldflags="-s -w" -o /out/fragments ./cmd/fragments
